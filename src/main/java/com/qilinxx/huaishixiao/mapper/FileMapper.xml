<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.huaishixiao.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.qilinxx.huaishixiao.entity.File">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="isuse" jdbcType="CHAR" property="isuse" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="create_uid" jdbcType="VARCHAR" property="createUid" />
    <result column="createTime" jdbcType="BIGINT" property="createtime" />
    <result column="updater_uid" jdbcType="VARCHAR" property="updaterUid" />
    <result column="updateTime" jdbcType="BIGINT" property="updatetime" />
    <result column="examer_uid" jdbcType="VARCHAR" property="examerUid" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qilinxx.huaishixiao.entity.File">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, filename, type, path, title, isuse, project_id, create_uid, createTime, updater_uid, 
    updateTime, examer_uid, details, state, remark
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    text
  </sql>
 <select id="selectAllByPId" resultMap="BaseResultMap">
   select * from file where project_id=#{pId}
 </select>
</mapper>